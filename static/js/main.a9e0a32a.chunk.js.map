{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Square","styled","div","ResetButton","button","Block","handleClick","block","id","className","onClick","BlockArea","blocks","map","value","index","BoardArea","squares","Array","fill","item","GameArea","Game","originState","step","history","isNextBlack","useState","state","setState","handleReset","useEffect","lines","checkMethod","i","length","a","b","c","d","e","alert","allLines","line","push","calculateWinner","newBlocks","slice","lastHistory","lastBlocks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e0a32a.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport './App.css';\nimport {useEffect, useState} from 'react'\n\n//棋盤格子\nconst Square = styled.div `\n  width: 20px;\n  height: 20px;\n  border: solid 1px black;\n  box-sizing: border-box;\n`\nconst ResetButton = styled.button `\n  width: 100px;\n  height : 30px;\n  margin-right: 10px;\n`\n//棋子\nfunction Block({handleClick, block, id}) {\n  return (\n    <div className=\"Block\" onClick={() => handleClick(id)}>\n      {block &&\n        <div className={block === \"B\"? \"black\": \"white\"} />\n      }\n    </div>\n  )\n}\n//棋子範圍\nfunction BlockArea({blocks, handleClick}) {\n  return (\n    <div className=\"BlockArea\">\n      {blocks.map((value, index) => \n        <Block handleClick={handleClick} block={value} key={index} id={index}>\n        </Block>\n      )}\n    </div>\n  )\n}\n//棋盤範圍\nfunction BoardArea() {\n  const squares = Array(18*18).fill(null)\n  return (\n    <div className=\"BoardArea\">\n      {squares.map((item, index) => <Square key={index}></Square>)}\n    </div>\n  )\n}\n\nfunction GameArea({blocks, handleClick}) {\n  return (\n    <div className=\"GameArea\">\n      <BoardArea></BoardArea>\n      <BlockArea blocks={blocks} handleClick={handleClick}></BlockArea>\n    </div>\n  )\n}\n\nfunction Game() {\n  const blocks = Array(19*19).fill(null)\n  const history = [blocks]\n  const originState = {\n    step : 0,\n    history : history,\n    blocks: blocks,\n    isNextBlack: true\n  }\n\n  const [state, setState] = useState(originState)\n\n  function handleClick(id) { //回傳 block id\n    //防止重複下棋\n    if(state.blocks[id]) return\n\n    let {step, history, blocks, isNextBlack} = state\n    const newBlocks = blocks.slice()\n    newBlocks[id] = isNextBlack? \"B\" : \"W\"\n    history.push(newBlocks)\n    setState({\n      step : step+1,\n      history: history,\n      blocks: newBlocks,\n      isNextBlack: !isNextBlack\n    })\n  }\n\n  function handleReset() {\n    setState(originState)\n  }\n\n  function handleReturn() {\n    if(state.history.length >= 2) {\n      const lastHistory = state.history.slice(0, state.history.length-1)\n      const lastBlocks = state.history[state.history.length-2]\n      setState({\n        ...state,\n        history: lastHistory,\n        blocks: lastBlocks,\n        isNextBlack: !state.isNextBlack\n      })\n    }\n    return\n  }\n\n  useEffect(() => {\n    calculateWinner()\n  })\n\n  function calculateWinner() {\n    const lines = [\n      [0,1,2,3,4],\n      [19,20,21,22,23],\n      [38,39,40,41,42],\n      [57,58,59,60,61],\n      [76,77,78,79,80],\n      [0,19,38,57,76],\n      [1,20,39,58,77],\n      [2,21,40,59,78],\n      [3,22,41,60,79],\n      [4,23,42,61,80],\n      [0,20,40,60,80],\n      [4,22,40,58,76]\n    ]\n    //基本組合解\n    function checkMethod(state, lines) {\n      const blocks = state.blocks\n      for(let i=0; i<lines.length; i++) {\n        const [a,b,c,d,e] = lines[i]\n        if(blocks[a] && blocks[a] === blocks[b] && blocks[a] === blocks[c] && blocks[a] === blocks[d] && blocks[a] === blocks[e]) {\n          if(blocks[a] === \"B\") {alert('black win')}\n          else {alert('white win')}\n          handleReset()\n          return\n        }\n      }\n    }\n    \n    //遍歷所有組合\n    const allLines = []\n    for(let i=0; i<=280; i++) {\n      const newLines = lines.map(line => line.map(block => block+i))\n      newLines.map(line => allLines.push(line))\n    }\n    checkMethod(state, allLines)\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"title\">\n        GoBang Challenge\n      </div>\n      <GameArea blocks={state.blocks} handleClick={handleClick}>\n      </GameArea>\n      <div className=\"status\">\n        {state.isNextBlack? \"換黑子下棋\" : \"換白子下棋\" }\n      </div>\n      <ResetButton onClick={handleReset}>重新開始</ResetButton>\n      <ResetButton onClick={handleReturn}>回到上一步</ResetButton>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game>\n      </Game>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}